# Copyright (c) 2021 - present, Timur Shenkao
# All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##############################################################################

# 389. Find the Difference https://leetcode.com/problems/find-the-difference/
# You are given two strings s and t.
# String t is generated by random shuffling string s and then add one more letter at a random position.
# Return the letter that was added to t.


class Solution:
    def find_the_difference(self, s: str, t: str) -> str:
        """ Time complexity: O(N).
            Space complexity: If character set is limited (for example, lowercase letters), than O(1).
                              If character set is not limited (any possible symbol), than O(M),
                              where M - cardinality of character set.
        """
        s_dict = dict()
        t_dict = dict()
        for ch in s:
            _ = s_dict.setdefault(ch, 0)
            s_dict[ch] += 1

        for ch in t:
            _ = t_dict.setdefault(ch, 0)
            t_dict[ch] += 1

        for ch in t:
            if ch not in s_dict:
                return ch
            if t_dict[ch] != s_dict[ch]:
                return ch

    def find_the_difference_bit_manipulation(self, s: str, t: str) -> str:
        """ Time complexity: O(N).
            Space complexity: (1)
        """
        # Initialize ch with 0, because 0 ^ X = X
        # 0 when XORed with any bit would not change the bits value.
        ch = 0

        # XOR all the characters of both s and t.
        for char_ in s:
            ch ^= ord(char_)

        for char_ in t:
            ch ^= ord(char_)

        # What is left after XORing everything is the difference.
        return chr(ch)
